#include <iostream>

int main()
{
    std::cout << "Enter two numbers:" << std::endl;
    int v1 = 0, v2 = 0;
    std::cin >> v1 >> v2;
    // std::cout << "The product of " << v1 << " and " << v2 << " is " << v1 * v2 << std::endl;
    std::cout << "The product of " << v1 << " and " << v2 << " is ";
    std::cout << v1 << " * " << v2 << " = " << v1 * v2 << std::endl;

    /* 
    它只会读取所需的两个变量值（这里是v1和v2）。在你的例子中：
    1. 程序只需要两个整数值
    2. 你输入了"2 5 10 50"这四个数字
    3. 程序只读取前两个值：2赋给v1，5赋给v2
    4. 后面的"10 50"被忽略，仍留在输入缓冲区中
    即使输入了多个数字，程序也只会按需读取，多余的输入会被保留在缓冲区中但不会被处理。这就是为什么程序只计算了2和5的乘积。

    这是因为输入了无效的整数格式。当你输入`/ 5 10`时：

    1. 程序尝试将`/`读入整数变量v1，但`/`不是有效的整数
    2. 当`std::cin`遇到无效输入时，会进入失败状态
    3. v1保持初始值0
    4. 由于输入流已经处于失败状态，读取v2的操作也失败
    5. v2也保持初始值0
    6. 程序计算0 * 0 = 0

    输入必须是有效的整数格式，例如`5 10`才能正确计算。字符`/`不能被解析为整数，所以导致了输入失败。
    */
    return 0;
}
